function AG4_ArtScansToOns(subpar)

% ---load par params if need be---
if isstruct(subpar) % if it is par_params struct
    par = subpar;
else % assume subject string
    par = AG1Params(subpar);
end

%par.Tasks = {'RS'};

%[zScoreA_cell, delta_cell] = PM_ArtRep_find_artifact_timepoints(subpar);

art.raw = load(fullfile(par.artrepdir, ['art_global_modified_' par.substr]));

%fn = par.Tasks;


for t = 1:length(par.Tasks)
    
    %tpt = par.TrialsPerTask{t}; 
    
    %thisTask = fn{t};
    %theseScans = [fn{t} 'Scans'];
    
    
    art.mot.(theseScans) = vertcat(art.raw.delta_cell{par.(theseScans)});
    art.sig.(theseScans) = vertcat(art.raw.zscoreA_cell{par.(theseScans)});
    
    
    idx.art.mot.(theseScans) = (art.mot.(theseScans) < par.art.motThresh);
    idx.art.sig.(theseScans) = (art.sig.(theseScans) <  par.art.sigThresh);
    
    idx.art.allNoArt.(theseScans) = idx.art.mot.(theseScans) .* idx.art.sig.(theseScans);
    
    for i = 1:length(art.mot.(theseScans))/tpt
        ons.art.all.(thisTask)(i) = (sum(idx.art.allNoArt.(theseScans)(i*tpt-(tpt-1):i*tpt))==tpt);
    end
    
    ArtOns = ons.art.all.(thisTask);
    
    cd (par.artrepdir)
    %save ([thisTask 'ArtOns'], 'ArtOns');
    
end



